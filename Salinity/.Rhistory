lty = 3
)
plotMeans(leafNoRatio_noOutliers$leafNoRatio,
leafNoRatio_noOutliers$saltConc,
leafNoRatio_noOutliers$species,
error.bars = "se",
xlab = ("Salt Concerntration (g/L)"),
ylab = ("Leaf No Ratio"),
pch = 21,
#bg = ("#ff007F"),
col = ("#ff007F"),
main=(""),
lty = 3
)
plotMeans(leafNoRatio_noOutliers$leafNoRatio,
leafNoRatio_noOutliers$saltConc,
leafNoRatio_noOutliers$species,
error.bars = "se",
xlab = ("Salt Concerntration (g/L)"),
ylab = ("Leaf No Ratio"),
pch = 21,
#bg = ("#ff007F"),
col = ("#ff007F"),
main=(""),
lty = 3,
legend.pos = "topright"
)
plotMeans(leafNoRatio_noOutliers$leafNoRatio,
leafNoRatio_noOutliers$saltConc,
leafNoRatio_noOutliers$species,
error.bars = "se",
xlab = ("Salt Concerntration (g/L)"),
ylab = ("Leaf No Ratio"),
pch = 21,
#bg = ("#ff007F"),
col = ("#ff007F"),
main=(""),
lty = 3,
legend.pos = "bottomleft"
)
plotMeans(leafNoRatio_noOutliers$leafNoRatio,
leafNoRatio_noOutliers$saltConc,
leafNoRatio_noOutliers$species,
error.bars = "se",
xlab = ("Salt Concerntration (g/L)"),
ylab = ("Leaf No Ratio"),
pch = 21,
#bg = ("#ff007F"),
col = ("#ff007F"),
main=(""),
lty = 3,
legend.pos = "bottomleft",
legend.lab = "Species"
)
### Assumption 1: data are normally distributed
# let's do a shapiro-wilk test of normality on our rootLnRatio variable
shapiro.test(asratio_df$rootLnRatio)
# we can visually assess distribution using histograms
hist(asratio_df$rootLnRatio)
boxplot(rootLnRatio ~ saltConc, data = leafNoRatio_noOutliers,
xlab = "saltConc",
ylab = "rootLnRatio"
)
# first, we work out what our first and third quartiles are for our data:
quartiles <- quantile(asratio_df$rootLnRatio, probs=c(.25, .75), na.rm = FALSE)
# and determine the interquartile range (IQR)
IQR <- IQR(asratio_df$rootLnRatio)
# Then we find our lower and upper limits:
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
# and reassign any data above the lower threshold and below the upper threshold to a new dataframe,
# which we will use for the analysis.
rootLnRatio_noOutliers <- filter(asratio_df, rootLnRatio > Lower & rootLnRatio < Upper )
# After relevant outliers are removed, we can then re-test for normality using our Shapiro-Wilk tests.
shapiro.test(rootLnRatio_noOutliers$rootLnRatio)
# And double check using a histogram - this is now looking OK and we'll again note that we expect the ANOVA to be robust to the violation of normality because the data are at least clearly part of a coherent distribution.
hist(rootLnRatio_noOutliers$rootLnRatio)
boxplot(rootLnRatio ~ saltConc, data = rootLnRatio_noOutliers,
xlab = "saltConc",
ylab = "rootLnRatio"
)
table(rootLnRatio_noOutliers$species, rootLnRatio_noOutliers$saltConc)
leveneTest(rootLnRatio ~ species*as.character(saltConc), data = rootLnRatio_noOutliers)
rootLn.aov <- aov(rootLnRatio ~ saltConc, data = rootLnRatio_noOutliers)
summary(rootLn.aov)
group_by(rootLnRatio_noOutliers, species, saltConc) %>%
summarise(count = n(),mean = mean(rootLnRatio, na.rm = TRUE),
sd = sd(rootLnRatio, na.rm = TRUE))
TukeyHSD(rootLn.aov, which = "saltConc")
plotMeans(leafNoRatio_noOutliers$rootLnRatio,
leafNoRatio_noOutliers$saltConc,
leafNoRatio_noOutliers$species,
error.bars = "se",
xlab = ("Salt Concerntration (g/L)"),
ylab = ("Leaf No Ratio"),
pch = 21,
#bg = ("#ff007F"),
col = ("#ff007F"),
main=(""),
lty = 3,
legend.pos = "bottomleft",
legend.lab = "Species"
)
### Assumption 1: data are normally distributed
# let's do a shapiro-wilk test of normality on our shoot height ratio variable
shapiro.test(asratio_df$shootHtRatio)
# we can visually assess distribution using histograms
hist(asratio_df$shootHtRatio)
boxplot(shootHtRatio ~ saltConc, data = asratio_df,
xlab = "saltConc",
ylab = "shootHtRatio"
)
quartiles <- quantile(asratio_df$shootHtRatio, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(asratio_df$shootHtRatio)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
shootHtRatio_noOutliers <- filter(asratio_df, shootHtRatio > Lower & shootHtRatio < Upper )
plotMeans(rootLnRatio_noOutliers$rootLnRatio,
rootLnRatio_noOutliers$saltConc,
rootLnRatio_noOutliers$species,
error.bars = "se",
xlab = ("Salt Concerntration (g/L)"),
ylab = ("Leaf No Ratio"),
pch = 21,
#bg = ("#ff007F"),
col = ("#ff007F"),
main=(""),
lty = 3,
legend.pos = "bottomleft",
legend.lab = "Species"
)
### Assumption 1: data are normally distributed
# let's do a shapiro-wilk test of normality on our shoot height ratio variable
shapiro.test(asratio_df$shootHtRatio)
# we can visually assess distribution using histograms
hist(asratio_df$shootHtRatio)
boxplot(shootHtRatio ~ saltConc, data = asratio_df,
xlab = "saltConc",
ylab = "shootHtRatio"
)
quartiles <- quantile(asratio_df$shootHtRatio, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(asratio_df$shootHtRatio)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
shootHtRatio_noOutliers <- filter(asratio_df, shootHtRatio > Lower & shootHtRatio < Upper )
# now we check again:
shapiro.test(shootHtRatio_noOutliers$shootHtRatio)
hist(shootHtRatio_noOutliers$shootHtRatio)
boxplot(shootHtRatio ~ saltConc, data = shootHtRatio_noOutliers,
xlab = "saltConc",
ylab = "shootHtRatio"
)
#What do you notice here? Make sure you put this into your write-up!
table(shootHtRatio_noOutliers$species, shootHtRatio_noOutliers$saltConc)
### Assumption 2: variances are homogeneous
# Let's do our levene's test
leveneTest(shootHtRatio ~ species*as.character(saltConc), data =shootHtRatio_noOutliers)
shootHt.aov <- aov(shootHtRatio ~ saltConc, data = shootHtRatio_noOutliers)
shootHt.aov <- aov(shootHtRatio ~ saltConc, data = shootHtRatio_noOutliers)
summary(shootHt.aov)
# summary statistics:
group_by(shootHtRatio_noOutliers, species, saltConc) %>%
summarise(count = n(),mean = mean(shootHtRatio, na.rm = TRUE),
sd = sd(shootHtRatio, na.rm = TRUE))
TukeyHSD(shootHt.aov, which = "saltConc")
### let's graph it!
plotMeans(shootHtRatio_noOutliers$shootHtRatio,
shootHtRatio_noOutliers$saltConc,
shootHtRatio_noOutliers$species,
error.bars = "se",
xlab = ("Salt Concerntration (g/L)"),
ylab = ("Leaf No Ratio"),
pch = 21,
#bg = ("#ff007F"),
col = ("#ff007F"),
main=(""),
lty = 3,
legend.pos = "bottomleft",
legend.lab = "Species"
)
rm(list = ls())
# and load our libraries
library(ggpubr)
library(dplyr)
library(car)
library(RcmdrMisc)
all_data <- na.omit(data.frame(read.csv("Salinity_data.csv")))
# read.csv will import the data from our working directory
head(all_data)
# note that we now have all_data in our global environment, which is 108 observations
# of 20 variables
# the name of our species column is a little weird, so lets sort that out:
names(all_data)[1] <- 'species'
# and we can check that everything looks as we expect it to:
str(all_data)
# Let's assign all of the variables we're going to use to their own object.
species <- all_data$species
saltConc <- as.character(all_data$salt_conc)
fwShootRoot <- all_data$fw_shoot_root_ratio
dwShootRoot <- all_data$dw_shoot_root_ratio
shootMoist <- all_data$shoot_moisture
rootMoist <- all_data$root_moisture
totMoist <- all_data$total_moisture
alldata_df <- cbind.data.frame(species, saltConc, fwShootRoot, dwShootRoot,
shootMoist, rootMoist, totMoist)
# check all is as we expect:
str(alldata_df)
### Assumption 1: data are normally distributed
shapiro.test(alldata_df$fwShootRoot)
hist(alldata_df$fwShootRoot, breaks = 100)
# first, we work out what our first and third quartiles are for our data:
quartiles <- quantile(alldata_df$fwShootRoot, probs=c(.25, .75), na.rm = FALSE)
# and determine the interquartile range (IQR)
IQR <- IQR(alldata_df$fwShootRoot)
# Then we find our lower and upper limits:
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
# and reassign any data above the lower threshold and below the upper threshold to a new dataframe,
# which we will use for the analysis.
fwShootRoot_noOutliers <- filter(alldata_df, fwShootRoot > Lower & fwShootRoot < Upper )
# After relevant outliers are removed, we can then re-test for normality using our Shapiro-Wilk tests.
shapiro.test(fwShootRoot_noOutliers$fwShootRoot)
# much better
hist(fwShootRoot_noOutliers$fwShootRoot)
desired_salt_order <- c("1.5", "2.5", "5", "10", "15")
fwShootRoot_noOutliers$saltConc <- factor(fwShootRoot_noOutliers$saltConc, levels = desired_salt_order)
levels(fwShootRoot_noOutliers$saltConc)
boxplot(fwShootRoot ~ saltConc, data = fwShootRoot_noOutliers,
xlab = "saltConc",
ylab = "fwShootRoot"
)
#This is still not great. Normally, we would go thorugh and remove the offending data in the dataset, but this will be too confusing. But again, some of the plants have been shooting atypically fast, so it's OK to take out any values that are very high, e.g. higher than 1.5:
fwShootRoot_noOutliers <- filter(alldata_df, fwShootRoot < 1.6 )
# Re-test for normality using our Shapiro-Wilk tests.
shapiro.test(fwShootRoot_noOutliers$fwShootRoot)
# much better
hist(fwShootRoot_noOutliers$fwShootRoot)
desired_salt_order <- c("1.5", "2.5", "5", "10", "15")
fwShootRoot_noOutliers$saltConc <- factor(fwShootRoot_noOutliers$saltConc, levels = desired_salt_order)
levels(fwShootRoot_noOutliers$saltConc)
boxplot(fwShootRoot ~ saltConc, data = fwShootRoot_noOutliers,
xlab = "saltConc",
ylab = "fwShootRoot"
)
table(fwShootRoot_noOutliers$species, fwShootRoot_noOutliers$saltConc)
library(car) # access the car package
leveneTest(fwShootRoot ~ species*saltConc, data = fwShootRoot_noOutliers)
fwShootRoot.aov <- aov(fwShootRoot ~ saltConc, data = fwShootRoot_noOutliers)
summary(fwShootRoot.aov)
# we can generate some summary statistics for our response data, depending on our two factors:
require("dplyr")
group_by(fwShootRoot_noOutliers, species, saltConc) %>%
summarise(count = n(),mean = mean(fwShootRoot, na.rm = TRUE),
sd = sd(fwShootRoot, na.rm = TRUE))
TukeyHSD(fwShootRoot.aov, which = "saltConc")
ggline(fwShootRoot_noOutliers, x = "saltConc", y = "fwShootRoot", color = "species",
add = c("mean_se"),
xlab = "salt concentration (g/L)",
ylab = "fresh weight shoot to root ratio (%)",
legend = "right")
### Assumption 1: data are normally distributed
shapiro.test(alldata_df$dwShootRoot)
hist(alldata_df$dwShootRoot)
desired_salt_order <- c("1.5", "2.5", "5", "10", "15")
alldata_df$saltConc <- factor(alldata_df$saltConc, levels = desired_salt_order)
levels(alldata_df$saltConc)
boxplot(dwShootRoot ~ saltConc, data = alldata_df,
xlab = "saltConc",
ylab = "dwShootRoot"
)
# first, we work out what our first and third quartiles are for our data:
quartiles <- quantile(alldata_df$dwShootRoot, probs=c(.25, .75), na.rm = FALSE)
# and determine the interquartile range (IQR)
IQR <- IQR(alldata_df$dwShootRoot)
# Then we find our lower and upper limits:
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
# and reassign any data above the lower threshold and below the upper threshold to a new dataframe,
# which we will use for the analysis.
dwShootRoot_noOutliers <- filter(alldata_df, dwShootRoot > Lower & dwShootRoot < Upper )
# After relevant outliers are removed, we can then re-test for normality using our Shapiro-Wilk tests.
shapiro.test(dwShootRoot_noOutliers$dwShootRoot)
# much better
hist(dwShootRoot_noOutliers$dwShootRoot)
boxplot(dwShootRoot ~ saltConc, data = dwShootRoot_noOutliers,
xlab = "saltConc",
ylab = "dwShootRoot"
)
table(dwShootRoot_noOutliers$species, dwShootRoot_noOutliers$saltConc)
leveneTest(dwShootRoot ~ species*saltConc, data = dwShootRoot_noOutliers)
dwShootRoot.aov <- aov(dwShootRoot ~ saltConc, data = dwShootRoot_noOutliers)
summary(dwShootRoot.aov)
group_by(dwShootRoot_noOutliers, species, saltConc) %>%
summarise(count = n(),mean = mean(dwShootRoot, na.rm = TRUE),
sd = sd(dwShootRoot, na.rm = TRUE))
TukeyHSD(dwShootRoot.aov, which = "saltConc")
ggline(dwShootRoot_noOutliers, x = "saltConc", y = "dwShootRoot", color = "species",
add = c("mean_se"),
xlab = "salt concentration (g/L)",
ylab = "dry weight shoot to root ratio (%)",
legend = "right")
plotMeans(dwShootRoot_noOutliers$dwShootRoot,
dwShootRoot_noOutliers$saltConc,
dwShootRoot_noOutliers$species,
error.bars = "se",
xlab = ("Salt Concerntration (g/L)"),
ylab = ("Dry wieght Shoot Root ratio"),
pch = 21,
col = ("#ff007F"),
main=(""),
lty = 3,
legend.pos = "bottomleft",
legend.lab = "Species"
)
plotMeans(dwShootRoot_noOutliers$dwShootRoot,
dwShootRoot_noOutliers$saltConc,
dwShootRoot_noOutliers$species,
error.bars = "se",
xlab = ("Salt Concerntration (g/L)"),
ylab = ("Dry wieght Shoot Root ratio (%)"),
pch = 21,
col = ("#ff007F"),
main=(""),
lty = 3,
legend.pos = "bottomleft",
legend.lab = "Species"
)
### Assumption 1: data are normally distributed
shapiro.test(alldata_df$shootMoist)
hist(alldata_df$shootMoist)
boxplot(shootMoist ~ saltConc, data = alldata_df,
xlab = "saltConc",
ylab = "shootMoist"
)
# first, we work out what our first and third quartiles are for our data:
quartiles <- quantile(alldata_df$shootMoist, probs=c(.25, .75), na.rm = FALSE)
# and determine the interquartile range (IQR)
IQR <- IQR(alldata_df$shootMoist)
# Then we find our lower and upper limits:
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
# and reassign any data above the lower threshold and below the upper threshold to a new dataframe,
# which we will use for the analysis.
shootMoist_noOutliers <- filter(alldata_df, shootMoist > Lower & shootMoist < Upper )
# After relevant outliers are removed, we can then re-test for normality using our Shapiro-Wilk tests.
shapiro.test(shootMoist_noOutliers$shootMoist)
# much better
hist(shootMoist_noOutliers$shootMoist)
boxplot(shootMoist ~ saltConc, data = shootMoist_noOutliers,
xlab = "saltConc",
ylab = "shootMoist"
)
table(shootMoist_noOutliers$species, shootMoist_noOutliers$saltConc)
library(car) # access the car package
#What does the result mean? We will continue here and assume the ANOVA is robust, but you will be able to see why this test is significant when you look at the ggboxplot above.
leveneTest(shootMoist ~ species*saltConc, data = shootMoist_noOutliers)
shootMoist.aov <- aov(shootMoist ~ saltConc, data = shootMoist_noOutliers)
summary(shootMoist.aov)
# summary statistics
group_by(shootMoist_noOutliers, species, saltConc) %>%
summarise(count = n(),mean = mean(shootMoist, na.rm = TRUE),
sd = sd(shootMoist, na.rm = TRUE))
TukeyHSD(shootMoist.aov, which = "saltConc")
ggline(shootMoist_noOutliers, x = "saltConc", y = "shootMoist", color = "species",
add = c("mean_se"),
xlab = "salt concentration (g/L)",
ylab = "dry weight shoot to root ratio (%)",
legend = "right")
### Assumption 1: data are normally distributed
shapiro.test(alldata_df$rootMoist)
hist(alldata_df$rootMoist)
boxplot(rootMoist ~ saltConc, data = alldata_df,
xlab = "saltConc",
ylab = "rootMoist"
)
# first, we work out what our first and third quartiles are for our data:
quartiles <- quantile(alldata_df$rootMoist, probs=c(.25, .75), na.rm = FALSE)
# and determine the interquartile range (IQR)
IQR <- IQR(alldata_df$rootMoist)
# Then we find our lower and upper limits:
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
# and reassign any data above the lower threshold and below the upper threshold to a new dataframe,
# which we will use for the analysis.
rootMoist_noOutliers <- filter(alldata_df, rootMoist > Lower & rootMoist < Upper )
# After relevant outliers are removed, we can then re-test for normality using our Shapiro-Wilk tests.
shapiro.test(rootMoist_noOutliers$rootMoist)
# much better
hist(rootMoist_noOutliers$rootMoist)
boxplot(rootMoist ~ saltConc, data = rootMoist_noOutliers,
xlab = "saltConc",
ylab = "rootMoist"
)
table(rootMoist_noOutliers$species, rootMoist_noOutliers$saltConc)
leveneTest(rootMoist ~ species * saltConc, data = rootMoist_noOutliers)
rootMoist.aov <- aov(rootMoist ~ saltConc, data = rootMoist_noOutliers)
summary(rootMoist.aov)
group_by(rootMoist_noOutliers, species, saltConc) %>%
summarise(count = n(),mean = mean(rootMoist, na.rm = TRUE),
sd = sd(rootMoist, na.rm = TRUE))
TukeyHSD(rootMoist.aov, which = "saltConc")
ggline(rootMoist_noOutliers, x = "saltConc", y = "rootMoist", color = "species",
add = c("mean_se"),
xlab = "salt concentration (g/L)",
ylab = "dry weight shoot to root ratio (%)",
legend = "right")
### Assumption 1: data are normally distributed
shapiro.test(alldata_df$totMoist)
hist(alldata_df$totMoist)
boxplot(totMoist ~ saltConc, data = alldata_df,
xlab = "saltConc",
ylab = "totMoist"
)
# first, we work out what our first and third quartiles are for our data:
quartiles <- quantile(alldata_df$totMoist, probs=c(.25, .75), na.rm = FALSE)
# and determine the interquartile range (IQR)
IQR <- IQR(alldata_df$totMoist)
# Then we find our lower and upper limits:
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
# and reassign any data above the lower threshold and below the upper threshold to a new dataframe,
# which we will use for the analysis.
totMoist_noOutliers <- filter(alldata_df, totMoist > Lower & totMoist < Upper )
# After relevant outliers are removed, we can then re-test for normality using our Shapiro-Wilk tests.
shapiro.test(totMoist_noOutliers$totMoist)
# much better
hist(totMoist_noOutliers$totMoist)
boxplot(totMoist ~ saltConc, data = totMoist_noOutliers,
xlab = "saltConc",
ylab = "totMoist"
)
table(totMoist_noOutliers$species, totMoist_noOutliers$saltConc)
leveneTest(totMoist ~ species*saltConc, data = totMoist_noOutliers)
totMoist.aov <- aov(totMoist ~ saltConc, data = totMoist_noOutliers)
summary(totMoist.aov)
# we can generate some summary statistics for our response data, depending on our two factors:
require("dplyr")
group_by(totMoist_noOutliers, species, saltConc) %>%
summarise(count = n(),mean = mean(totMoist, na.rm = TRUE),
sd = sd(totMoist, na.rm = TRUE))
TukeyHSD(totMoist.aov, which = "saltConc")
ggline(totMoist_noOutliers, x = "saltConc", y = "totMoist", color = "species",
add = c("mean_se"),
xlab = "salt concentration (g/L)",
ylab = "dry weight shoot to root ratio (%)",
legend = "right")
plotMeans(totMoist_noOutliers$totMoist,
totMoist_noOutliers$saltConc,
totMoist_noOutliers$species,
error.bars = "se",
xlab = ("Salt Concerntration (g/L)"),
ylab = ("Total moisture"),
pch = 21,
col = ("#ff007F"),
main=(""),
lty = 3,
legend.pos = "bottomleft",
legend.lab = "Species"
)
plotMeans(rootLnRatio_noOutliers$rootLnRatio,
rootLnRatio_noOutliers$saltConc,
rootLnRatio_noOutliers$species,
error.bars = "se",
xlab = ("Salt Concerntration (g/L)"),
ylab = ("Root Length Ratio"),
pch = 21,
#bg = ("#ff007F"),
col = ("#ff007F"),
main=(""),
lty = 3,
legend.pos = "bottomleft",
legend.lab = "Species"
)
plotMeans(fwShootRoot_noOutliers$fwShootRoot,
fwShootRoot_noOutliers$saltConc,
fwShootRoot_noOutliers$species,
error.bars = "se",
xlab = ("Salt Concerntration (g/L)"),
ylab = ("fresh weight shoot to root ratio (%)"),
pch = 21,
col = ("#ff007F"),
main=(""),
lty = 3,
legend.pos = "bottomleft",
legend.lab = "Species"
)
plotMeans(rootMoist_noOutliers$rootMoist,
rootMoist_noOutliers$saltConc,
rootMoist_noOutliers$species,
error.bars = "se",
xlab = ("Salt Concerntration (g/L)"),
ylab = ("dry weight shoot to root ratio (%)"),
pch = 21,
col = ("#ff007F"),
main=(""),
lty = 3,
legend.pos = "bottomleft",
legend.lab = "Species"
)
plotMeans(shootMoist_noOutliers$shootMoist,
shootMoist_noOutliers$saltConc,
shootMoist_noOutliers$species,
error.bars = "se",
xlab = ("Salt Concerntration (g/L)"),
ylab = ("dry weight shoot to root ratio (%)"),
pch = 21,
col = ("#ff007F"),
main=(""),
lty = 3,
legend.pos = "bottomleft",
legend.lab = "Species"
)
